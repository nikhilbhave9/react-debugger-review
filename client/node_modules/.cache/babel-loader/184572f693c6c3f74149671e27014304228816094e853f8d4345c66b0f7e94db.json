{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logLevelSeverity = exports.makeConsoleLogger = exports.LogLevel = void 0;\nconst helpers_1 = require(\"./helpers\");\nvar LogLevel;\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"debug\";\n  LogLevel[\"INFO\"] = \"info\";\n  LogLevel[\"WARN\"] = \"warn\";\n  LogLevel[\"ERROR\"] = \"error\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nfunction makeConsoleLogger(name) {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo);\n  };\n}\nexports.makeConsoleLogger = makeConsoleLogger;\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nfunction logLevelSeverity(level) {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20;\n    case LogLevel.INFO:\n      return 40;\n    case LogLevel.WARN:\n      return 60;\n    case LogLevel.ERROR:\n      return 80;\n    default:\n      return (0, helpers_1.assertNever)(level);\n  }\n}\nexports.logLevelSeverity = logLevelSeverity;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA,IAAYA,QAKX;AALD,WAAYA,QAAQ;EAClBA,2BAAe;EACfA,yBAAa;EACbA,yBAAa;EACbA,2BAAe;AACjB,CAAC,EALWA,QAAQ,GAARC,gBAAQ,KAARA,gBAAQ;AAWpB,SAAgBC,iBAAiB,CAACC,IAAY;EAC5C,OAAO,CAACC,KAAK,EAAEC,OAAO,EAAEC,SAAS,KAAI;IACnCC,OAAO,CAACH,KAAK,CAAC,CAAC,GAAGD,IAAI,IAAIC,KAAK,GAAG,EAAEC,OAAO,EAAEC,SAAS,CAAC;EACzD,CAAC;AACH;AAJAL;AAMA;;;AAGA,SAAgBO,gBAAgB,CAACJ,KAAe;EAC9C,QAAQA,KAAK;IACX,KAAKJ,QAAQ,CAACS,KAAK;MACjB,OAAO,EAAE;IACX,KAAKT,QAAQ,CAACU,IAAI;MAChB,OAAO,EAAE;IACX,KAAKV,QAAQ,CAACW,IAAI;MAChB,OAAO,EAAE;IACX,KAAKX,QAAQ,CAACY,KAAK;MACjB,OAAO,EAAE;IACX;MACE,OAAO,yBAAW,EAACR,KAAK,CAAC;EAAA;AAE/B;AAbAH","names":["LogLevel","exports","makeConsoleLogger","name","level","message","extraInfo","console","logLevelSeverity","DEBUG","INFO","WARN","ERROR"],"sources":["/home/nikhilbhave9/reactdevtools/web-bug-log/node_modules/@notionhq/client/src/logging.ts"],"sourcesContent":["import { assertNever } from \"./helpers\"\n\nexport enum LogLevel {\n  DEBUG = \"debug\",\n  INFO = \"info\",\n  WARN = \"warn\",\n  ERROR = \"error\",\n}\n\nexport interface Logger {\n  (level: LogLevel, message: string, extraInfo: Record<string, unknown>): void\n}\n\nexport function makeConsoleLogger(name: string): Logger {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo)\n  }\n}\n\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nexport function logLevelSeverity(level: LogLevel): number {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20\n    case LogLevel.INFO:\n      return 40\n    case LogLevel.WARN:\n      return 60\n    case LogLevel.ERROR:\n      return 80\n    default:\n      return assertNever(level)\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}